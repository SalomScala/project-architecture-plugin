/*******************************************************************************
 * Copyright  2018 Mairus Schultchen
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *******************************************************************************/

plugins {
    id 'com.gradle.plugin-publish' version '0.9.4'
    id 'java-gradle-plugin'
    id 'nebula.facet' version '4.0.1'
    id 'nebula.info' version '3.7.1'
    id 'nebula.source-jar' version '8.0.0'
    id 'nebula.javadoc-jar' version '8.0.0'
    id 'nebula.maven-publish' version '8.0.0'
    id "com.jfrog.bintray" version "1.8.1" //1.8.2
    
}

defaultTasks 'clean', 'javadoc', 'test', 'check', 'assemble'


apply plugin: 'eclipse'

group = 'de.salomscala.projectarchitectureplugin'
version = 0.3

sourceCompatibility = 1.8
targetCompatibility = 1.8

eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

description 'Gradle plugin for providing rules for the architecture of project dependencies'

bintray {
    user = project.hasProperty('bintray.user') ? project.property('bintray.user') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintray.key') ? project.property('bintray.key') : System.getenv('BINTRAY_KEY')
    publications = ['nebula']
    pkg {
        repo = 'Projects'
        name = 'projectarchitectureplugin'
        desc  = "${project.description}"
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/SalomScala/project-architecture-plugin.git'
        websiteUrl = 'https://github.com/SalomScala/project-architecture-plugin'
        issueTrackerUrl = 'https://github.com/SalomScala/project-architecture-plugin/issues'
        publicDownloadNumbers = true
        githubRepo = 'SalomScala/project-architecture-plugin'
        githubReleaseNotesFile = 'README.md'
        version {
            name = "${project.version}"
            desc = 'Test Version'
            released  = new Date()
        }
    }
}

gradlePlugin {
    plugins {
        simplePlugin {
            id = 'projectarchitectureplugin'
            implementationClass = 'de.salomscala.projectarchitectureplugin.plugin.ProjectArchitectureDescriptionPlugin'
        }
    }
}